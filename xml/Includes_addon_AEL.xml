<?xml version="1.0" encoding="utf-8"?>
<includes>
	<!-- Sking DEBUG settings ================================================================== -->
    <!-- Values true or false -> NEED TO INVESTIGATE THIS FURTHER  -->
    <!-- <constant name="DEBUG_AEL_views">true</constant> -->

	<!-- Variables ============================================================================= -->
	<variable name="ROM_Simple_Art_Main">
		<value condition="!String.IsEqual(ListItem.Property(platform),MAME)+ !String.IsEmpty(ListItem.Art(boxfront))">$INFO[ListItem.Art(boxfront)]</value>
		<value condition="String.IsEqual(ListItem.Property(platform),MAME) + !String.IsEmpty(ListItem.Art(flyer))">$INFO[ListItem.Art(flyer)]</value>
		<value condition="String.IsEqual(ListItem.Property(platform),MAME) + !String.IsEmpty(ListItem.Art(boxfront))">$INFO[ListItem.Art(boxfront)]</value>
	</variable>
	<variable name="ROM_Simple_Art_Title">
		<value condition="!String.IsEmpty(ListItem.Art(title))">$INFO[ListItem.Art(title)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(boxback))">$INFO[ListItem.Art(boxback)]</value>
	</variable>
	<variable name="ROM_Simple_Art_Snap">
		<value condition="!String.IsEmpty(ListItem.Art(snap))">$INFO[ListItem.Art(snap)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(cartridge))">$INFO[ListItem.Art(cartridge)]</value>
	</variable>
	<variable name="ROM_Simple_Art_Logo">
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
	</variable>

	<variable name="Art_Clearlogo_or_Banner">
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
	</variable>

	<variable name="Art_Icon_or_Poster">
		<value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
	</variable>

	<!-- Proportional font: font14, Monospaced font: Mono24 -->
	<variable name="TextViewer_Font_Name">
		<value condition="String.IsEqual(Window(Home).Property(FontWidth),monospaced)">Mono24</value>
		<value>font14</value>
	</variable>
	<variable name="TextViewer_Text_Colour">
		<value condition="String.IsEqual(Window(Home).Property(FontWidth),monospaced)">white</value>
		<value>blue</value>
	</variable>

	<!-- Parametrizable view includes ========================================================== -->
	<include name="AEL_Matrix_Image">
		<control type="group">
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<!-- Placeholder -->
			<!--
			<control type="image">
				<width>260</width>
				<height>190</height>
				<texture border="0">special://skin/extras/backgrounds/pattern4.jpg</texture>
			</control>
			<control type="image">
				<width>260</width>
				<height>25</height>
				<texture border="0">special://skin/extras/backgrounds/pattern3.jpg</texture>
			</control>
			-->
			<control type="label">
				<width>260</width>
				<height>25</height>
				<label>$PARAM[asset_label]</label>
				<align>center</align>
				<aligny>center</aligny>
				<font>font9</font>
				<textcolor>white</textcolor>
			</control>
			<!-- Placeholder -->
			<!--
			<control type="image">
				<top>25</top>
				<width>260</width>
				<height>165</height>
				<fadetime>100</fadetime>
				<texture background="true">special://skin/extras/backgrounds/pattern1.jpg</texture>
			</control>
			-->
			<control type="image">
				<top>25</top>
				<width>260</width>
				<height>165</height>
				<aspectratio>keep</aspectratio>
				<fadetime>100</fadetime>
				<texture background="true">$PARAM[asset_image]</texture>
			</control>
		</control>
	</include>

	<!-- Title and Controller are never be set at the same time. Title is only for ROMs and
		 Controller is only for Launchers
	  -->
	<include name="AEL_Matrix_Image_Title_or_Controller">
		<control type="group">
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<!-- Placeholder -->
			<!--
			<control type="image">
				<width>260</width>
				<height>190</height>
				<texture border="0">special://skin/extras/backgrounds/pattern4.jpg</texture>
			</control>
			-->
			<control type="label">
				<width>260</width>
				<height>25</height>
				<label>Title or Controller</label>
				<align>center</align>
				<aligny>center</aligny>
				<font>font9</font>
				<textcolor>white</textcolor>
			</control>
			<!-- Placeholder -->
			<!--
			<control type="image">
				<top>25</top>
				<width>260</width>
				<height>165</height>
				<fadetime>100</fadetime>
				<texture background="true">special://skin/extras/backgrounds/pattern1.jpg</texture>
			</control>
			-->
			<control type="image">
				<top>25</top>
				<width>260</width>
				<height>165</height>
				<aspectratio>keep</aspectratio>
				<fadetime>100</fadetime>
				<texture background="true">$INFO[ListItem.Art(title)]</texture>
			</control>
			<control type="image">
				<top>25</top>
				<width>260</width>
				<height>165</height>
				<aspectratio>keep</aspectratio>
				<fadetime>100</fadetime>
				<texture background="true">$INFO[ListItem.Art(controller)]</texture>
			</control>
		</control>
	</include>

	<include name="AEL_Matrix_Text">
		<param name="left" />
		<param name="top" />
		<param name="label_colour" default="blue" />
		<param name="text_label" />
		<param name="text" />
		<definition>
			<control type="group">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<control type="label">
					<width>150</width>
					<height>25</height>
					<label>$PARAM[text_label]</label>
					<align>right</align>
					<aligny>center</aligny>
					<font>font12</font>
					<textcolor>$PARAM[label_colour]</textcolor>
				</control>
				<control type="fadelabel">
					<left>160</left>
					<width>400</width>
					<height>25</height>
					<label fallback="">$PARAM[text]</label>
					<align>left</align>
					<aligny>center</aligny>
					<font>font12</font>
					<scrollout>false</scrollout>
					<pauseatend>1000</pauseatend>
				</control>
			</control>
		</definition>
	</include>

	<include name="AEL_Properties_Text">
		<param name="left" />
		<param name="top" />
		<param name="label_colour" default="blue" />
		<param name="label_width" default="240" />
		<param name="text_left" default="250" />
		<param name="text_width" default="350" />
		<param name="text_label" />
		<param name="text" />
		<definition>
			<control type="group">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<control type="label">
					<width>$PARAM[label_width]</width>
					<height>25</height>
					<label>$PARAM[text_label]</label>
					<align>right</align>
					<aligny>center</aligny>
					<font>font12</font>
					<textcolor>$PARAM[label_colour]</textcolor>
				</control>
				<control type="fadelabel">
					<left>$PARAM[text_left]</left>
					<width>$PARAM[text_width]</width>
					<height>25</height>
					<label fallback="">$PARAM[text]</label>
					<align>left</align>
					<aligny>center</aligny>
					<font>font12</font>
					<scrollout>false</scrollout>
					<pauseatend>1000</pauseatend>
				</control>
			</control>
		</definition>
	</include>

	<!-- Platform icon ========================================================================= -->
	<include name="AEL_Platform_Icon">
		<control type="image">
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>100</width>
			<height>100</height>
			<!-- <texture>special://skin/extras/backgrounds/pattern4.jpg</texture> -->
			<texture>$INFO[ListItem.Property(platform),special://home/addons/plugin.program.advanced.emulator.launcher/media/p_pixel/,.png]</texture>
			<aspectratio>keep</aspectratio>
		</control>
	</include>

	<!-- New Media flags to be used in MyPrograms.xml ========================================== -->
	<variable name="AEL_Fav_Status_text">
		<value condition="String.IsEqual(ListItem.Property(AEL_Fav_stat),Fav_OK)">[COLOR white]OK[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(AEL_Fav_stat),Fav_UnlinkedROM)">[COLOR orange]U ROM[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(AEL_Fav_stat),Fav_UnlinkedLauncher)">[COLOR yellow]U Launch[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(AEL_Fav_stat),Fav_Broken)">[COLOR red]Broken[/COLOR]</value>
	</variable>
	<variable name="AEL_NoIntro_text">
		<value condition="String.IsEqual(ListItem.Property(AEL_NoIntro_stat),NoIntro_Have)">[COLOR green]Have[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(AEL_NoIntro_stat),NoIntro_Miss)">[COLOR red]Miss[/COLOR]</value>
		<value condition="String.IsEqual(ListItem.Property(AEL_NoIntro_stat),NoIntro_Unknown)">[COLOR yellow]Unknown[/COLOR]</value>
	</variable>
	<variable name="AEL_PClone_text">
		<value condition="String.IsEqual(ListItem.Property(AEL_PClone_stat),PClone_Parent)">Parent</value>
		<value condition="String.IsEqual(ListItem.Property(AEL_PClone_stat),PClone_Clone)">[COLOR orange]Clone[/COLOR]</value>
	</variable>

	<!-- Helper includes
		 InfoFlag define in Includes.xml @338
		 MediaFlag define in Includes.xml @359
	-->
	<include name="InfoFlag_AEL">
		<control type="group">
			<width>180</width>
			<visible>$PARAM[visible]</visible>
			<control type="image">
				<top>-3</top>
				<left>0</left>
				<width>40</width>
				<height>40</height>
				<texture colordiffuse="white">$PARAM[icon]</texture>
			</control>
			<control type="label">
				<left>50</left>
				<width>180</width>
				<height>35</height>
				<aligny>center</aligny>
				<font>font12</font>
				<label>$PARAM[label]</label>
			</control>
		</control>
	</include>
	<include name="MediaFlag_AEL">
		<param name="width">115</param>
		<param name="height">60</param>
		<param name="visible">true</param>
		<definition>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<fadetime>0</fadetime>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture>$PARAM[texture]</texture>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>
	<include name="TextFlag_AEL">
		<param name="width">115</param>
		<param name="height">60</param>
		<param name="visible">true</param>
		<definition>
			<control type="group">
				<width>$PARAM[width]</width>
				<visible>$PARAM[visible]</visible>
				<control type="label">
					<width>115</width>
					<height>60</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$PARAM[text]</label>
					<font>font_flag</font>
				</control>
				<include content="MediaFlag_AEL">
					<param name="texture" value="flags/flag.png" />
					<param name="visible" value="$PARAM[visible]" />
				</include>
			</control>
		</definition>
	</include>

	<include name="MediaFlags_AEL">
		<!-- http://kodi.wiki/view/Group_List_Control
			 The group list control is a special case of the group control. It is used for placing 
			 a set of controls into a list (either horizontally or vertically) and handles all the 
			 navigation within the list and placement within the list for you.
		-->
		<control type="grouplist">
			<orientation>horizontal</orientation>
			<right>20</right>
			<top>0</top>
			<height>70</height>
			<align>right</align>
			<itemgap>28</itemgap>
			<width>1900</width>
			<usecontrolcoords>true</usecontrolcoords>

			<!-- AEL InFavourites flag (boolean) -->
			<include content="TextFlag_AEL">
				<param name="text" value="[COLOR purple]InFav[/COLOR]" />
				<param name="visible" value="String.IsEqual(ListItem.Property(AEL_InFav),InFav_True)" />
			</include>
			<!-- AEL Multidisc flag (boolean) -->
			<include content="TextFlag_AEL">
				<param name="text" value="MD" />
				<param name="visible" value="String.IsEqual(ListItem.Property(AEL_MultiDisc),MultiDisc_True)" />
			</include>
			<!-- AEL Favourite status (multivalue) -->
			<include content="TextFlag_AEL">
				<param name="text" value="$VAR[AEL_Fav_Status_text]" />
				<param name="visible" value="String.IsEqual(ListItem.Property(AEL_Fav_stat),Fav_OK) | String.IsEqual(ListItem.Property(AEL_Fav_stat),Fav_UnlinkedROM) | String.IsEqual(ListItem.Property(AEL_Fav_stat),Fav_UnlinkedLauncher) | String.IsEqual(ListItem.Property(AEL_Fav_stat),Fav_Broken)" />
			</include>
			<!-- AEL No-Intro status (multivalue) -->
			<include content="TextFlag_AEL">
				<param name="text" value="$VAR[AEL_NoIntro_text]" />
				<param name="visible" value="String.IsEqual(ListItem.Property(AEL_NoIntro_stat),NoIntro_Have) | String.IsEqual(ListItem.Property(AEL_NoIntro_stat),NoIntro_Miss) | String.IsEqual(ListItem.Property(AEL_NoIntro_stat),NoIntro_Unknown)" />
			</include>
			<!-- AEL PClone status (multivalue) 
				 Also used by AML
			-->
			<include content="TextFlag_AEL">
				<param name="text" value="$VAR[AEL_PClone_text]" />
				<param name="visible" value="String.IsEqual(ListItem.Property(AEL_PClone_stat),PClone_Parent) | String.IsEqual(ListItem.Property(AEL_PClone_stat),PClone_Clone)" />
			</include>
			<!--
			<include content="MediaFlag_AEL">
				<param name="texture" value="$VAR[ResolutionFlagVar]" />
				<param name="visible" value="!String.IsEmpty(ListItem.VideoResolution)" />
			</include>
			-->
		</control>
	</include>

	<!-- Include used in MyPrograms.xml Modded to never play videos on the background -->
	<!-- Original code was in Includes.xml -->
	<include name="DefaultBackground_AEL">
		<definition>
			<!--
			<control type="videowindow">
				<depth>DepthBackground</depth>
				<include>FullScreenDimensions</include>
				<visible>Player.HasVideo</visible>
				<visible>!Slideshow.IsActive</visible>
			</control>
			-->
			<control type="visualisation">
				<include>FullScreenDimensions</include>
				<visible>!Slideshow.IsActive</visible>
				<visible>Player.HasAudio + String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia)) + Visualisation.Enabled</visible>
			</control>
			<control type="group">
				<include>FullScreenDimensions</include>
				<animation effect="zoom" center="auto" end="102,102" time="0" condition="Integer.IsGreater(System.StereoscopicMode,0)">conditional</animation>
				<control type="group">
					<animation effect="fade" start="100" end="bg_alpha" time="0" condition="!Control.IsVisible(31111)">Conditional</animation>
					<animation effect="fade" start="0" end="100" time="300" condition="Window.Previous(fullscreenvideo) | Window.Previous(startup)">WindowOpen</animation>
					<include>ColoredBackgroundImages</include>
				</control>
				<control type="group" id="31111">
					<!--
					<visible>![Player.HasVideo | [Player.HasAudio + Visualisation.Enabled + !String.IsEmpty(Visualisation.Name)]] | !String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))</visible>
					-->
					<visible>![[Player.HasAudio + Visualisation.Enabled + !String.IsEmpty(Visualisation.Name)]] | !String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))</visible>
					<depth>DepthBackground</depth>
					<animation effect="fade" start="0" end="100" time="400">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="300">WindowClose</animation>
					<animation effect="fade" time="400">VisibleChange</animation>
					<control type="image" id="32111">
						<include>FullScreenDimensions</include>
						<aspectratio>scale</aspectratio>
						<fadetime>400</fadetime>
						<animation effect="fade" time="400">VisibleChange</animation>
						<texture background="true" colordiffuse="37FFFFFF">$VAR[MediaFanartVar]</texture>
						<visible>!Control.IsVisible(502) | $EXP[infodialog_active]</visible>
					</control>
					<control type="image">
						<left>-3</left>
						<top>0</top>
						<right>1193</right>
						<height>100%</height>
						<aspectratio aligny="center">scale</aspectratio>
						<fadetime>400</fadetime>
						<include>OpenClose_Left</include>
						<animation effect="fade" time="400">VisibleChange</animation>
						<texture background="true" colordiffuse="37FFFFFF">$VAR[PosterVar]</texture>
						<visible>!Control.IsVisible(32111)</visible>
					</control>
				</control>
			</control>
		</definition>
	</include>

	<!-- Include used in MyPrograms.xml Modded to prevent a bar on the top to show when playing video -->
	<!-- Original code was in Includes.xml -->
	<include name="TopBar_AEL">
		<param name="sublabel">$INFO[Container.SortMethod,$LOCALIZE[31022]: ,  ∙  ]$INFO[Container.CurrentItem,, / ]$INFO[Container.NumItems]</param>
		<definition>
			<control type="group">
				<animation effect="slide" end="0,-112" time="300" tween="sine" easing="inout" condition="$EXP[infodialog_active]">conditional</animation>
				<depth>DepthBars</depth>
				<animation effect="fade" start="0" end="100" time="300" condition="[Window.Previous(fullscreenvideo) | Window.Previous(startup)] + !Window.IsVisible(1109)">WindowOpen</animation>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>110%</width>
					<height>130</height>
					<texture>frame/InfoBar.png</texture>
					<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(screencalibration)">WindowClose</animation>
				</control>
				<control type="grouplist">
					<left>35</left>
					<description>Left side of top bar</description>
					<width>900</width>
					<top>-7</top>
					<height>100</height>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
					<animation effect="slide" end="0,10" time="200" reversible="true" condition="String.IsEmpty(Control.GetLabel(18900))">Conditional</animation>
					<control type="label">
						<label>$PARAM[breadcrumbs_label]</label>
						<include>BreadcrumbsLabel</include>
					</control>
					<control type="label">
						<label>$INFO[Container.ShowTitle, / ]</label>
						<include>BreadcrumbsLabel</include>
						<visible>!String.IsEmpty(Container.ShowTitle) + !String.IsEqual(Container.ShowTitle,Container.FolderName)</visible>
					</control>
					<control type="label">
						<label>$INFO[Container.FolderName, / ]</label>
						<include>BreadcrumbsLabel</include>
						<visible>![Container.Content() + Window.IsActive(videos)]</visible>
						<visible>![Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRTimers.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRSearch.xml)]</visible>
					</control>
					<control type="label">
						<label>$INFO[Container.PluginCategory, / ]</label>
						<include>BreadcrumbsLabel</include>
						<visible>!String.isempty(Container.PluginCategory)</visible>
					</control>
					<control type="label">
						<label>$INFO[Control.GetLabel(10),: ]</label>
						<include>BreadcrumbsLabel</include>
						<visible>!String.IsEqual(Control.GetLabel(10),$LOCALIZE[16100]) + Window.IsActive(videos)</visible>
					</control>
					<control type="label">
						<left>10</left>
						<label>($LOCALIZE[31052])</label>
						<include>BreadcrumbsLabel</include>
						<visible>Container.Filtered</visible>
					</control>
				</control>
				<control type="button">
					<top>0</top>
					<width>200</width>
					<height>100</height>
					<label></label>
					<onclick>Action(Back)</onclick>
					<texturefocus />
					<texturenofocus />
				</control>
				<control type="label" id="18900">
					<top>50</top>
					<label>$PARAM[sublabel]</label>
					<left>35</left>
					<shadowcolor>text_shadow</shadowcolor>
					<height>100</height>
					<width>900</width>
					<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
				</control>
				<control type="grouplist">
					<top>0</top>
					<align>right</align>
					<right>20</right>
					<height>200</height>
					<orientation>horizontal</orientation>
					<width>900</width>
					<itemgap>10</itemgap>
					<visible>!Window.IsVisible(extendedprogressdialog)</visible>
					<animation effect="fade" time="150">VisibleChange</animation>
					<!--
					<control type="group">
						<width>600</width>
						<visible>Player.HasMedia + String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))</visible>
						<animation effect="fade" time="200">VisibleChange</animation>
						<control type="grouplist">
							<left>-75</left>
							<orientation>horizontal</orientation>
							<height>38</height>
							<top>14</top>
							<align>right</align>
							<width>660</width>
							<itemgap>5</itemgap>
							<usecontrolcoords>true</usecontrolcoords>
							<control type="image">
								<top>4</top>
								<width>32</width>
								<height>32</height>
								<aspectratio>keep</aspectratio>
								<texture colordiffuse="button_focus">$VAR[NowPlayingIconVar]</texture>
							</control>
							<control type="label">
								<label>$INFO[Player.Title]</label>
								<font>font27</font>
								<shadowcolor>text_shadow</shadowcolor>
								<height>35</height>
								<width min="1" max="602">auto</width>
							</control>
						</control>
						<control type="label" id="7700">
							<label>$VAR[NowPlayingSublabelVar]</label>
							<left>-45</left>
							<top>44</top>
							<font>font12</font>
							<textcolor>grey</textcolor>
							<shadowcolor>text_shadow</shadowcolor>
							<height>25</height>
							<width>630</width>
							<align>right</align>
						</control>
					</control>
					-->
					<control type="label">
						<font>font_clock</font>
						<shadowcolor>text_shadow</shadowcolor>
						<height>200</height>
						<width>auto</width>
						<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(screencalibration)">WindowClose</animation>
						<label>$INFO[System.Time]</label>
					</control>
				</control>
				<control type="grouplist">
					<right>10</right>
					<top>70</top>
					<width>800</width>
					<height>100</height>
					<align>right</align>
					<itemgap>5</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="label">
						<height>50</height>
						<width>auto</width>
						<aligny>center</aligny>
						<textoffsetx>-8</textoffsetx>
						<label>$INFO[System.AlarmPos]</label>
						<visible>System.HasAlarm(shutdowntimer)</visible>
					</control>
					<control type="image">
						<top>16</top>
						<width>40</width>
						<height>22</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="left">keep</aspectratio>
						<texture>icons/power.png</texture>
						<visible>System.HasAlarm(shutdowntimer)</visible>
					</control>
					<control type="label">
						<height>50</height>
						<width>auto</width>
						<aligny>center</aligny>
						<label>$INFO[Window(Weather).Property(Current.Temperature)]$INFO[System.TemperatureUnits]</label>
						<visible>Skin.HasSetting(show_weatherinfo) + Weather.IsFetched + ![String.IsEqual(Weather.FanartCode,na)]</visible>
					</control>
					<control type="image">
						<top>1</top>
						<width>50</width>
						<height>50</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="left">keep</aspectratio>
						<texture>$INFO[Weather.FanartCode,weather/small/,.png]</texture>
						<visible>Skin.HasSetting(show_weatherinfo) + Weather.IsFetched + ![String.IsEqual(Weather.FanartCode,na)]</visible>
					</control>
					<control type="image">
						<top>8</top>
						<left>-20</left>
						<width>74</width>
						<height>40</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="center">keep</aspectratio>
						<texture>dialogs/volume/mute.png</texture>
						<visible>Player.Muted</visible>
					</control>
				</control>
				<control type="label" id="23000">
					<top>0</top>
					<left>0</left>
					<label>$INFO[ListItem.SortLetter]</label>
					<font>font_MainMenu</font>
					<width>100%</width>
					<height>80</height>
					<align>center</align>
					<visible>!System.HasModalDialog</visible>
					<visible>Container.Scrolling</visible>
					<visible>!Container.Content(seasons)</visible>
					<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[563])</visible>
					<animation effect="fade" start="0" end="100" time="200" reversible="true">VisibleChange</animation>
					<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
				</control>
			</control>
		</definition>
	</include>

	<!-- Original code from <include name="ImageWidget"> in Includes_Home.xml -->
	<include name="AEL_Text_Widget">
		<param name="visible">true</param>
		<definition>
			<control type="group" id="$PARAM[widget_id]889">
				<visible>$PARAM[visible]</visible>
				<control type="grouplist" id="$PARAM[widget_id]577">
					<orientation>vertical</orientation>
					<top>0</top>
					<bottom>0</bottom>
					<left>50</left>
					<right>50</right>
					<align>center</align>
					<control type="textbox">
						<width>100%</width>
						<height min="0" max="300">auto</height>
						<label>$PARAM[text_label]</label>
						<align>center</align>
						<font>font14</font>
					</control>
				</control>
			</control>
		</definition>
	</include>

</includes>
